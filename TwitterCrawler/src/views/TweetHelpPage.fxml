<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Label?>
<?import javafx.scene.control.Separator?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.text.Font?>

<AnchorPane id="AnchorPane" prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/10.0.1" xmlns:fx="http://javafx.com/fxml/1">
    <children>
        <Label layoutX="38.0" layoutY="28.0" prefHeight="17.0" prefWidth="290.0" text="User Guide">
            <font>
                <Font name="System Bold Italic" size="12.0" />
            </font>
        </Label>
        <Separator layoutX="38.0" layoutY="60.0" prefHeight="3.0" prefWidth="219.0" />
      <TextArea editable="false" layoutX="32.0" layoutY="60.0" prefHeight="317.0" prefWidth="537.0" text="Number of accounts&#10;At any moment, even while crawling a graph the user can press the plus button&#10;(Top of the window) and add another twitter developer account.&#10;PS: the user can benefits from this feature when all his working accounts exceeded the&#10;limit of queries, so if he add an account the graph crawling will continue without waiting&#10;any minutes (The time needed to reset the number of queries for each twitter developer &#10;account).&#10;&#10;Input&#10;In the first input the user can write one of this two options:&#10;                •&#9;Twitter User Id   &#9;&#9;&#9;&#9;Ex: 12.&#10;                •&#9;Screen Name of Twitter user in the following format:&#9;&#10;                               o&#9;     https://twitter.com/Cristiano&#9;&#10;                               o      &#9;    Cristiano&#10;                               o&#9;    @Cristiano&#10;Or He can left this input empty and choose a file of Twitter Users IDs (.txt File).&#10;The format of the file is very simple, the file has no header and each Id is located in a&#10; line (Each line contains single ID).&#10;&#10;&#10;Date&#10;The user should choose minimum and maximum dates of tweets that he wants to crawl. &#10;&#10;Language&#10;The user should choose the languages of tweets that he wants to crawl. &#10;He can check the checkbox ‘All’, Therefore the application will crawl all tweets regardless its &#10;language.&#10;Or he can specify the languages (from the checkComboBox) of tweets that he want to crawl.&#10;&#10;&#10;Save File&#10;The user should specify the directory that will contains the crawled tweets.&#10;For each input User Id will be a JSON file that contains all its tweets.                                                  &#10;&#10;&#10;Feedback&#10;The user can extract all the feedback and save it in a file at any moment.&#10;&#10;&#10;Start Crawling Button&#10;Needed to start the tweets crawling.&#10;&#10;&#10;Stop Crawling Button&#10;If the user press this button while crawling the reached result will be save in the files.                                                                  &#10;&#10;&#10;Resume Crawling Button&#10;This button will be clickable only after clicking the stop crawling button or exiting the &#10;application while crawling. So if the user want to continue his crawl from the stopped point &#10;he can press this button and his work will continue normally.&#10;&#10;&#10;Cancel Current Crawl&#10;This button will be clickable only after clicking the stop crawling button or exiting the &#10;application while crawling. So by clicking this button the feedback window will reset and &#10;all the inputs fields will be enabled and ready for a new crawl.&#10;&#10;&#10;&#10;&#10;For more Informations &#10;Contact Us:&#10;ali.choumane@ul.edu.lb &#10;fakih.k.ali@gmail.com&#10;maria-afara5@hotmail.com" />
    </children>
</AnchorPane>
